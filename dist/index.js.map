{"version":3,"sources":["../src/components/Button/Button.tsx"],"names":[],"mappings":";;;AAgCO,IAAM,SAAS,CAAC;AAAA,EACrB,QAAA;AAAA,EACA,OAAU,GAAA,SAAA;AAAA,EACV,IAAO,GAAA,IAAA;AAAA,EACP,QAAW,GAAA,KAAA;AAAA,EACX,OAAA;AAAA,EACA,SAAY,GAAA;AACd,CAAmB,KAAA;AAEjB,EAAA,MAAM,WACJ,GAAA,sIAAA;AAGF,EAAA,MAAM,cAAiB,GAAA;AAAA,IACrB,OAAS,EAAA,8DAAA;AAAA,IACT,SACE,EAAA,iEAAA;AAAA,IACF,OACE,EAAA,2EAAA;AAAA,IACF,KAAO,EAAA;AAAA,GACT;AAGA,EAAA,MAAM,WAAc,GAAA;AAAA,IAClB,EAAI,EAAA,qBAAA;AAAA,IACJ,EAAI,EAAA,qBAAA;AAAA,IACJ,EAAI,EAAA;AAAA,GACN;AAGA,EAAM,MAAA,eAAA,GAAkB,WACpB,+BACA,GAAA,gBAAA;AAEJ,EACE,uBAAA,GAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAA,CAAA,EAAG,WAAW,CAAA,CAAA,EAAI,eAAe,OAAO,CAAC,CAAI,CAAA,EAAA,WAAA,CAAY,IAAI,CAAC,CAAI,CAAA,EAAA,eAAe,IAAI,SAAS,CAAA,CAAA;AAAA,MACzG,QAAA;AAAA,MACA,OAAA;AAAA,MACA,IAAK,EAAA,QAAA;AAAA,MAEJ;AAAA;AAAA,GACH;AAEJ","file":"index.js","sourcesContent":["import React from 'react';\n\nexport interface ButtonProps {\n  /**\n   * Contenu du bouton\n   */\n  children: React.ReactNode;\n  /**\n   * Variante du bouton\n   */\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';\n  /**\n   * Taille du bouton\n   */\n  size?: 'sm' | 'md' | 'lg';\n  /**\n   * Désactiver le bouton\n   */\n  disabled?: boolean;\n  /**\n   * Fonction appelée lorsque le bouton est cliqué\n   */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /**\n   * Classes CSS additionnelles\n   */\n  className?: string;\n}\n\n/**\n * Composant Button pour les actions utilisateur\n */\nexport const Button = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  disabled = false,\n  onClick,\n  className = '',\n}: ButtonProps) => {\n  // Classes de base pour tous les boutons\n  const baseClasses =\n    'inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2';\n\n  // Classes selon la variante\n  const variantClasses = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary:\n      'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',\n    outline:\n      'border border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-gray-500',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',\n  };\n\n  // Classes selon la taille\n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg',\n  };\n\n  // Classes pour l'état désactivé\n  const disabledClasses = disabled\n    ? 'opacity-50 cursor-not-allowed'\n    : 'cursor-pointer';\n\n  return (\n    <button\n      className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${disabledClasses} ${className}`}\n      disabled={disabled}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"]}